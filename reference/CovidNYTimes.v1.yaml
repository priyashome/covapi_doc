openapi: 3.0.0
info:
  title: CovidNYTimes API Docs
  version: '1.0'
  description: "API documentation for COVID-19 2020 cumulative counts of infection in the United States. Provided by the New York Times, based on data collected from state and local agencies.\n\nThe data begins with the first reported coronavirus case in Washington State on Jan. 21, 2020.\n\nCount of patients occurs at the place where they are treated, not where they live.\n\n**Confirmed**\nThis data reflects *Confirmed* cases. Cases are confirmed when they are reported by federal, state, territorial or local government agency. \n\n**Dates**\nEach date includes the cumulative count of cases or deaths reported on that day. \n"
  contact:
    email: covid-data@nytimes.com
    name: New York Times
    url: 'https://github.com/nytimes/covid-19-data'
  license:
    url: 'https://github.com/nytimes/covid-19-data/blob/master/LICENSE'
    name: License (CC BY-NC)
servers:
  - url: 'https://covapi.herokuapp.com'
    description: restapi
paths:
  /api/timeline/states:
    get:
      summary: GET states
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  state:
                    type: object
                    example: Alabama
                    description: Name of the State
                    properties:
                      date:
                        type: object
                        example: '2020-04-13'
                        description: Date in YYYY-MM-DD format
                        properties:
                          cases:
                            type: string
                            example: '10'
                            description: Number of cases in the state on the particular date
                          deaths:
                            type: string
                            description: Number of deaths in the state on a particular date.
                            example: '1'
              examples:
                example-1:
                  value:
                    Alabama:
                      '2020-04-13':
                        cases: '3805'
                        deaths: '104'
                      '2020-04-14':
                        cases: '3953'
                        deaths: '114'
                      '2020-04-15':
                        cases: '4241'
                        deaths: '123'
                      '2020-04-16':
                        cases: '4404'
                        deaths: '137'
                    Wyoming:
                      '2020-04-13':
                        cases: '275'
                        deaths: '1'
                      '2020-04-14':
                        cases: '282'
                        deaths: '1'
                      '2020-04-15':
                        cases: '288'
                        deaths: '2'
                      '2020-04-16':
                        cases: '296'
                        deaths: '2'
      operationId: get-api-timeline-states
      description: |-
        Returns a list of states with cumulative infection counts broken out by date.

        List of the United States states, with postal codes and FIPS Keys can be found at

        https://www.nrcs.usda.gov/wps/portal/nrcs/detail/?cid=nrcs143_013696
      parameters:
        - $ref: '#/components/parameters/mode'
        - $ref: '#/components/parameters/fipsKey'
      tags:
        - Timeline Endpoints by State
    parameters: []
  '/api/timeline/states/{state}':
    parameters:
      - $ref: '#/components/parameters/state'
    get:
      summary: GET state
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                description: Timeline date in format YYYY-MM-DD.
                example: '2020-04-16'
                properties:
                  cases:
                    type: string
                    description: Count of the number of cases in the state on a particular date.
                    example: '120'
                  deaths:
                    type: string
                    description: Count of the number of deaths in the state on a particular date.
                    example: '1'
              examples:
                example-1:
                  value:
                    '2020-04-14':
                      cases: '3953'
                      deaths: '114'
                    '2020-04-15':
                      cases: '4241'
                      deaths: '123'
                    '2020-04-16':
                      cases: '4404'
                      deaths: '137'
            application/xml:
              schema:
                type: object
                properties: {}
              examples:
                example-1: {}
      operationId: get-api-timeline-states-state
      description: "Returns the timeline information for a single state. The state is specified as the Path Param. \n\nThe timeline consists of cumulative infection counts for each date recorded."
      parameters:
        - $ref: '#/components/parameters/mode'
        - $ref: '#/components/parameters/fipsKey'
      tags:
        - Timeline Endpoints by State
  '/api/timeline/states/{state}/counties':
    parameters:
      - $ref: '#/components/parameters/state'
    get:
      summary: GET counties per state
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1: {}
      operationId: get-api-timeline-states-state-counties
      description: List of counties for the state selected
      parameters:
        - $ref: '#/components/parameters/mode'
        - $ref: '#/components/parameters/fipsKey'
      tags:
        - Timeline Endpoints by State
  '/api/timeline/states/{state}/counties/{county}':
    parameters:
      - $ref: '#/components/parameters/county'
      - $ref: '#/components/parameters/state'
    get:
      summary: GET county per state
      tags:
        - Timeline Endpoints by County
      responses: {}
      operationId: get-api-timeline-states-state-counties-county
      description: County per state
      parameters:
        - $ref: '#/components/parameters/mode'
        - $ref: '#/components/parameters/fipsKey'
  /api/timeline/counties:
    get:
      summary: GET counties
      tags:
        - Timeline Endpoints by County
      responses: {}
      operationId: get-api-timeline-counties
      parameters:
        - $ref: '#/components/parameters/mode'
        - $ref: '#/components/parameters/fipsKey'
  '/api/timeline/counties/{state}':
    parameters:
      - $ref: '#/components/parameters/state'
    get:
      summary: GET counties per state
      tags:
        - Timeline Endpoints by County
      responses: {}
      operationId: get-api-timeline-counties-state
      parameters:
        - $ref: '#/components/parameters/mode'
        - $ref: '#/components/parameters/fipsKey'
  '/api/timeline/counties/{state}/{county}':
    parameters:
      - $ref: '#/components/parameters/state'
      - $ref: '#/components/parameters/county'
    get:
      summary: GET county per state
      tags:
        - Timeline Endpoints by County
      responses: {}
      operationId: get-api-timeline-counties-state-county
      parameters:
        - $ref: '#/components/parameters/mode'
        - $ref: '#/components/parameters/fipsKey'
  /api/total/states:
    get:
      summary: GET states
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
      operationId: get-api-total-states
      tags:
        - Totals Endpoints by State
      parameters:
        - $ref: '#/components/parameters/mode'
        - $ref: '#/components/parameters/fipsKey'
  '/api/total/states/{state}':
    parameters:
      - $ref: '#/components/parameters/state'
    get:
      summary: GET state
      tags:
        - Totals Endpoints by State
      responses: {}
      operationId: get-api-total-states-state
      parameters:
        - $ref: '#/components/parameters/mode'
        - $ref: '#/components/parameters/fipsKey'
  '/api/total/states/{state}/counties':
    parameters:
      - $ref: '#/components/parameters/state'
    get:
      summary: GET counties per state
      tags:
        - Totals Endpoints by State
      responses: {}
      operationId: get-api-total-states-state-counties
      parameters:
        - $ref: '#/components/parameters/mode'
        - $ref: '#/components/parameters/fipsKey'
  '/api/total/states/{state}/counties/{county}':
    parameters:
      - $ref: '#/components/parameters/state'
      - $ref: '#/components/parameters/county'
    get:
      summary: GET county per state
      tags:
        - Totals Endpoints by State
      responses: {}
      operationId: get-api-total-states-state-counties-county
      parameters:
        - $ref: '#/components/parameters/mode'
        - $ref: '#/components/parameters/fipsKey'
  /api/total/counties:
    get:
      summary: GET counties
      responses: {}
      operationId: get-api-total-counties
      tags:
        - Totals Endpoints by County
      parameters:
        - $ref: '#/components/parameters/mode'
        - $ref: '#/components/parameters/fipsKey'
  '/api/total/counties/{state}':
    parameters:
      - $ref: '#/components/parameters/state'
    get:
      summary: GET state per county
      tags:
        - Totals Endpoints by County
      responses: {}
      operationId: get-api-total-counties-state
      parameters:
        - $ref: '#/components/parameters/mode'
        - $ref: '#/components/parameters/fipsKey'
  '/api/total/counties/{state}/{county}':
    parameters:
      - $ref: '#/components/parameters/state'
      - $ref: '#/components/parameters/county'
    get:
      summary: GET county per state
      tags:
        - Totals Endpoints by County
      responses: {}
      operationId: get-api-total-counties-state-county
      parameters:
        - $ref: '#/components/parameters/mode'
        - $ref: '#/components/parameters/fipsKey'
      description: ''
components:
  schemas:
    State:
      x-examples:
        State example:
          Alabama:
            '2020-04-13':
              cases: '3805'
              deaths: '104'
            '2020-04-14':
              cases: '3953'
              deaths: '114'
            '2020-04-15':
              cases: '4241'
              deaths: '123'
            '2020-04-16':
              cases: '4404'
              deaths: '137'
          California:
            '2020-04-13':
              cases: '275'
              deaths: '1'
            '2020-04-14':
              cases: '282'
              deaths: '1'
            '2020-04-15':
              cases: '288'
              deaths: '2'
            '2020-04-16':
              cases: '296'
              deaths: '2'
      type: object
      description: "Collection of States with cumulative counts of infections and dates organized by date.\n\nThe Map heirarchy is as shown.\n\n{ \"State\": {\"Date\": {\"Cases\",\"Deaths\"}}} \n\nStates can be listed by their complete name or FIPS codes."
      properties:
        Date:
          type: object
          description: |-
            Date an infection is registered in the State. Format is YYYY-MM-DD.

            The List of Dates for a State starts from the first incidence of an infection being reported to a government authority.
          example: '2020-04-10'
          properties:
            cases:
              type: string
              description: Cumulative count of infections per Date
              example: '10'
            deaths:
              type: string
              description: Cumulative count of deaths per Date.
              example: '1'
      x-tags:
        - State
      title: ''
  parameters:
    mode:
      name: mode
      in: query
      description: |-
        Indicates if the counts of cases or the counts of deaths are desired.

        Can have 2 values `cases`, `deaths`. Default both are returned
      schema:
        type: string
      enum:
        - cases
        - deaths
    fipsKey:
      name: fipsKey
      in: query
      description: 'FIPS Key = true, returns the state and county keys as FIPS code values.'
      schema:
        type: string
      enum:
        - true
        - false
    state:
      name: state
      in: path
      description: "Name of the State. \\n\\nState name can be the full name of the state, postal code, or the FIPS code."
      schema:
        type: string
      required: true
    county:
      name: county
      in: path
      description: "Name of the County. \\n\\nCounty name can be the full name of the county, or the FIPS code."
      schema:
        type: string
      required: true
